# inspired from https://github.com/neuecc/UniRx/blob/master/.circleci/config.yml
version: 2.1
executors:
  unity:
    # https://hub.docker.com/r/gableroux/unity3d/tags
    parameters:
      version: {type: string}
    docker:
      - image: gableroux/unity3d:<< parameters.version >>
commands:
  unity_activate:
    parameters:
      unity_version: {type: string}
      unity_license: {type: string}
    steps:
      # get activation file, if fail to activate unity, use this key and activate from https://license.unity3d.com/manual
      - run: apt update && apt install libunwind8 -y
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -logFile -createManualActivationFile || exit 0
      - run: cat Unity_v<< parameters.unity_version >>.alf
      # get from UNITY_LICENSE envvar(base64 encoded(cat foo.ulf | base64 )), this file is generated from above manual activation
      - run: echo << parameters.unity_license >> | base64 -di  >> .circleci/Unity.ulf
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity.ulf || exit 0
jobs:
  test:
    parameters:
      unity_version: {type: string}
      unity_license: {type: string}
    executor:
      name: unity
      version: << parameters.unity_version >>
    steps:
      - checkout
#      - unity_activate:
#          unity_version: << parameters.unity_version >>
#          unity_license: << parameters.unity_license >>
      - run:
          name: Test Linux(Mono)
          command: /opt/Unity/Editor/Unity -runTests -testResults ./test-results/results.xml -quit -batchmode -nographics -silent-crashes -logFile -projectPath . /headless /ScriptBackend Mono2x /BuildTarget StandaloneLinux64
          working_directory: .
      - store_test_results:
          path: test-results
workflows:
  version: 2
  build-unity:
    jobs:
      - test:
          unity_version: 2019.2.12f1
          unity_license: ${UNITY_LICENSE_2019_2} # not used for now
